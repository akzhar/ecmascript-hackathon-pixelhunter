var score = (function (exports) {
  'use strict';

  const config = {
    GET_DATA_URL: `https://raw.githubusercontent.com/akzhar/pixelhunter/master/src/js/game-model/data.json`,
    POST_DATA_URL: `https://echo.htmlacademy.ru/`,
    GAMES_COUNT: 10,
    LIVES_COUNT: 3,
    TIME_TO_ANSWER: 30000, // 30 sec
    COLOR_RED: `#d74040`,
    AnswerType: {
      PAINTING: `painting`,
      PHOTO: `photo`
    },
    QuestionType: {
      TWO_OF_TWO: `two-of-two`,
      TINDER_LIKE: `tinder-like`,
      ONE_OF_THREE: `one-of-three`
    },
    QuestionTypeToFrameSize: {
      'two-of-two': {width: 468, height: 458},
      'tinder-like': {width: 705, height: 455},
      'one-of-three': {width: 304, height: 455}
    }
  };

  // Scoring at the end of the game
  // @param  {array} answers массив ответов пользователя
  // @param  {integer} lives кол-во оставшихся жизней
  // @return {integer} кол-во набранных очков
  function getTotalScore(answers, lives) {
    if (answers.length < config.GAMES_COUNT) {
      return -1;
    }
    const score = answers.reduce((acc, answer) => {
      if (answer.isOK) {
        acc += 100;
      }
      if (answer.time < 10) {
        acc += 50;
      }
      if (answer.time > 20) {
        acc -= 50;
      }
      return acc;
    }, 0);
    return score + lives * 50;
  }

  function getRightAnswersCount(answers) {
    return answers.filter((answer) => answer.isOK).length;
  }

  function getSpeedBonusCount(answers) {
    return answers.filter((answer) => answer.time < 10).length;
  }

  function getSlowPenaltyCount(answers) {
    return answers.filter((answer) => answer.time > 20).length;
  }

  exports.getRightAnswersCount = getRightAnswersCount;
  exports.getSlowPenaltyCount = getSlowPenaltyCount;
  exports.getSpeedBonusCount = getSpeedBonusCount;
  exports.getTotalScore = getTotalScore;

  return exports;

}({}));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NvcmUuanMiLCJzb3VyY2VzIjpbInNyYy9qcy9jb25maWcuanMiLCJzcmMvanMvc2NvcmUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY29uZmlnID0ge1xuICBHRVRfREFUQV9VUkw6IGBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vYWt6aGFyL3BpeGVsaHVudGVyL21hc3Rlci9zcmMvanMvZ2FtZS1tb2RlbC9kYXRhLmpzb25gLFxuICBQT1NUX0RBVEFfVVJMOiBgaHR0cHM6Ly9lY2hvLmh0bWxhY2FkZW15LnJ1L2AsXG4gIEdBTUVTX0NPVU5UOiAxMCxcbiAgTElWRVNfQ09VTlQ6IDMsXG4gIFRJTUVfVE9fQU5TV0VSOiAzMDAwMCwgLy8gMzAgc2VjXG4gIENPTE9SX1JFRDogYCNkNzQwNDBgLFxuICBBbnN3ZXJUeXBlOiB7XG4gICAgUEFJTlRJTkc6IGBwYWludGluZ2AsXG4gICAgUEhPVE86IGBwaG90b2BcbiAgfSxcbiAgUXVlc3Rpb25UeXBlOiB7XG4gICAgVFdPX09GX1RXTzogYHR3by1vZi10d29gLFxuICAgIFRJTkRFUl9MSUtFOiBgdGluZGVyLWxpa2VgLFxuICAgIE9ORV9PRl9USFJFRTogYG9uZS1vZi10aHJlZWBcbiAgfSxcbiAgUXVlc3Rpb25UeXBlVG9GcmFtZVNpemU6IHtcbiAgICAndHdvLW9mLXR3byc6IHt3aWR0aDogNDY4LCBoZWlnaHQ6IDQ1OH0sXG4gICAgJ3RpbmRlci1saWtlJzoge3dpZHRoOiA3MDUsIGhlaWdodDogNDU1fSxcbiAgICAnb25lLW9mLXRocmVlJzoge3dpZHRoOiAzMDQsIGhlaWdodDogNDU1fVxuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25maWc7XG4iLCJpbXBvcnQgY29uZmlnIGZyb20gJy4vY29uZmlnLmpzJztcblxuLy8gU2NvcmluZyBhdCB0aGUgZW5kIG9mIHRoZSBnYW1lXG4vLyBAcGFyYW0gIHthcnJheX0gYW5zd2VycyDQvNCw0YHRgdC40LIg0L7RgtCy0LXRgtC+0LIg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPXG4vLyBAcGFyYW0gIHtpbnRlZ2VyfSBsaXZlcyDQutC+0Lst0LLQviDQvtGB0YLQsNCy0YjQuNGF0YHRjyDQttC40LfQvdC10Llcbi8vIEByZXR1cm4ge2ludGVnZXJ9INC60L7Quy3QstC+INC90LDQsdGA0LDQvdC90YvRhSDQvtGH0LrQvtCyXG5mdW5jdGlvbiBnZXRUb3RhbFNjb3JlKGFuc3dlcnMsIGxpdmVzKSB7XG4gIGlmIChhbnN3ZXJzLmxlbmd0aCA8IGNvbmZpZy5HQU1FU19DT1VOVCkge1xuICAgIHJldHVybiAtMTtcbiAgfVxuICBjb25zdCBzY29yZSA9IGFuc3dlcnMucmVkdWNlKChhY2MsIGFuc3dlcikgPT4ge1xuICAgIGlmIChhbnN3ZXIuaXNPSykge1xuICAgICAgYWNjICs9IDEwMDtcbiAgICB9XG4gICAgaWYgKGFuc3dlci50aW1lIDwgMTApIHtcbiAgICAgIGFjYyArPSA1MDtcbiAgICB9XG4gICAgaWYgKGFuc3dlci50aW1lID4gMjApIHtcbiAgICAgIGFjYyAtPSA1MDtcbiAgICB9XG4gICAgcmV0dXJuIGFjYztcbiAgfSwgMCk7XG4gIHJldHVybiBzY29yZSArIGxpdmVzICogNTA7XG59XG5cbmZ1bmN0aW9uIGdldFJpZ2h0QW5zd2Vyc0NvdW50KGFuc3dlcnMpIHtcbiAgcmV0dXJuIGFuc3dlcnMuZmlsdGVyKChhbnN3ZXIpID0+IGFuc3dlci5pc09LKS5sZW5ndGg7XG59XG5cbmZ1bmN0aW9uIGdldFNwZWVkQm9udXNDb3VudChhbnN3ZXJzKSB7XG4gIHJldHVybiBhbnN3ZXJzLmZpbHRlcigoYW5zd2VyKSA9PiBhbnN3ZXIudGltZSA8IDEwKS5sZW5ndGg7XG59XG5cbmZ1bmN0aW9uIGdldFNsb3dQZW5hbHR5Q291bnQoYW5zd2Vycykge1xuICByZXR1cm4gYW5zd2Vycy5maWx0ZXIoKGFuc3dlcikgPT4gYW5zd2VyLnRpbWUgPiAyMCkubGVuZ3RoO1xufVxuXG5leHBvcnQge2dldFRvdGFsU2NvcmUsIGdldFJpZ2h0QW5zd2Vyc0NvdW50LCBnZXRTcGVlZEJvbnVzQ291bnQsIGdldFNsb3dQZW5hbHR5Q291bnR9O1xuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztFQUFBLE1BQU0sTUFBTSxHQUFHO0VBQ2YsRUFBRSxZQUFZLEVBQUUsQ0FBQyx1RkFBdUYsQ0FBQztFQUN6RyxFQUFFLGFBQWEsRUFBRSxDQUFDLDRCQUE0QixDQUFDO0VBQy9DLEVBQUUsV0FBVyxFQUFFLEVBQUU7RUFDakIsRUFBRSxXQUFXLEVBQUUsQ0FBQztFQUNoQixFQUFFLGNBQWMsRUFBRSxLQUFLO0VBQ3ZCLEVBQUUsU0FBUyxFQUFFLENBQUMsT0FBTyxDQUFDO0VBQ3RCLEVBQUUsVUFBVSxFQUFFO0VBQ2QsSUFBSSxRQUFRLEVBQUUsQ0FBQyxRQUFRLENBQUM7RUFDeEIsSUFBSSxLQUFLLEVBQUUsQ0FBQyxLQUFLLENBQUM7RUFDbEIsR0FBRztFQUNILEVBQUUsWUFBWSxFQUFFO0VBQ2hCLElBQUksVUFBVSxFQUFFLENBQUMsVUFBVSxDQUFDO0VBQzVCLElBQUksV0FBVyxFQUFFLENBQUMsV0FBVyxDQUFDO0VBQzlCLElBQUksWUFBWSxFQUFFLENBQUMsWUFBWSxDQUFDO0VBQ2hDLEdBQUc7RUFDSCxFQUFFLHVCQUF1QixFQUFFO0VBQzNCLElBQUksWUFBWSxFQUFFLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsR0FBRyxDQUFDO0VBQzNDLElBQUksYUFBYSxFQUFFLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsR0FBRyxDQUFDO0VBQzVDLElBQUksY0FBYyxFQUFFLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsR0FBRyxDQUFDO0VBQzdDLEdBQUc7RUFDSCxDQUFDOztFQ25CRDtFQUNBO0VBQ0E7RUFDQTtFQUNBLFNBQVMsYUFBYSxDQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUU7RUFDdkMsRUFBRSxJQUFJLE9BQU8sQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLFdBQVcsRUFBRTtFQUMzQyxJQUFJLE9BQU8sQ0FBQyxDQUFDLENBQUM7RUFDZCxHQUFHO0VBQ0gsRUFBRSxNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxFQUFFLE1BQU0sS0FBSztFQUNoRCxJQUFJLElBQUksTUFBTSxDQUFDLElBQUksRUFBRTtFQUNyQixNQUFNLEdBQUcsSUFBSSxHQUFHLENBQUM7RUFDakIsS0FBSztFQUNMLElBQUksSUFBSSxNQUFNLENBQUMsSUFBSSxHQUFHLEVBQUUsRUFBRTtFQUMxQixNQUFNLEdBQUcsSUFBSSxFQUFFLENBQUM7RUFDaEIsS0FBSztFQUNMLElBQUksSUFBSSxNQUFNLENBQUMsSUFBSSxHQUFHLEVBQUUsRUFBRTtFQUMxQixNQUFNLEdBQUcsSUFBSSxFQUFFLENBQUM7RUFDaEIsS0FBSztFQUNMLElBQUksT0FBTyxHQUFHLENBQUM7RUFDZixHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUM7RUFDUixFQUFFLE9BQU8sS0FBSyxHQUFHLEtBQUssR0FBRyxFQUFFLENBQUM7RUFDNUIsQ0FBQztBQUNEO0VBQ0EsU0FBUyxvQkFBb0IsQ0FBQyxPQUFPLEVBQUU7RUFDdkMsRUFBRSxPQUFPLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLEtBQUssTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQztFQUN4RCxDQUFDO0FBQ0Q7RUFDQSxTQUFTLGtCQUFrQixDQUFDLE9BQU8sRUFBRTtFQUNyQyxFQUFFLE9BQU8sT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sS0FBSyxNQUFNLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQztFQUM3RCxDQUFDO0FBQ0Q7RUFDQSxTQUFTLG1CQUFtQixDQUFDLE9BQU8sRUFBRTtFQUN0QyxFQUFFLE9BQU8sT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sS0FBSyxNQUFNLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQztFQUM3RDs7Ozs7Ozs7Ozs7OzsiLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
